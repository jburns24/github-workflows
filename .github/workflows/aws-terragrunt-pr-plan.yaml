name: "AWS Terragrunt PR Plan"
on:
  workflow_call:
    inputs:
      CONTAINER:
        required: false
        type: string
        default: ghcr.io/liatrio/builder-image-aws-terraform:v1.0.1
      WORKING_DIR:
        required: false
        type: string
        default: ./
    secrets:
      AWS_ACCESS_KEY_ID:
        required: true
      AWS_SECRET_ACCESS_KEY:
        required: true
      AWS_ROLE_ARN:
        required: true
jobs:
  azure-terragrunt-pr-plan:
    name: "AWS Terragrunt PR Plan"
    runs-on: ubuntu-latest
    container: ${{ inputs.CONTAINER }}
    defaults:
      run:
        working-directory: ${{ inputs.WORKING_DIR }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Create aws configuration file
        run: |
          mkdir -p ~/.aws
          echo "[default]" >> ~/.aws/config
          echo "role_arn = ${{ secrets.AWS_ROLE_ARN }}" >> ~/.aws/config

      - name: Configure aws-vault
        run: aws-vault --env add runner
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Test aws-vault configuration
        run: aws-vault exec runner -- aws sts get-caller-identity

    #   - name: Terragrunt hcl check
    #     run: terragrunt hclfmt --terragrunt-check

    #   - name: Terraform fmt check
    #     run: terraform fmt -check -recursive

    #   - name: Terragrunt validate check
    #     run: aws-vault terragrunt run-all validate
    #     env:
    #       AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
    #       AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    #       # AWS_ROLE_ARN: ${{ secrets.AWS_ROLE_ARN }}

    #   - name: Terragrunt Plan
    #     id: terragrunt_plan
    #     run: |
    #       terragrunt plan --terragrunt-non-interactive -out plan.out
    #       terragrunt show --terragrunt-non-interactive -no-color -json plan.out > plan.json
    #     continue-on-error: true # Continue on error to ensure the plan is added as a comment on the PR.
    #     env:
    #       AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
    #       AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    #       AWS_ROLE_ARN: ${{ secrets.AWS_ROLE_ARN }}

    # #   - uses: liatrio/terraform-change-pr-commenter@v1.3.2
    # #     with:
    # #       json-file: ${{ inputs.WORKING_DIR }}/plan.json

    #   - name: Status
    #     if: contains(steps.*.outcome, 'failure')
    #     run: exit 1
